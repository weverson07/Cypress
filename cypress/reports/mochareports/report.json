{
  "stats": {
    "suites": 19,
    "tests": 114,
    "passes": 114,
    "pending": 0,
    "failures": 0,
    "start": "2021-03-16T01:49:28.252Z",
    "end": "2021-03-16T01:52:29.334Z",
    "duration": 71003,
    "testsRegistered": 114,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2141cee4-f9ea-48e1-95bf-53bd367cc593",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\aliasing.spec.js",
      "file": "cypress\\integration\\examples\\aliasing.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "89ac9609-7390-416c-ba4c-8559fd85d402",
          "title": "Aliasing",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".as() - alias a DOM element for later use",
              "fullTitle": "Aliasing .as() - alias a DOM element for later use",
              "timedOut": null,
              "duration": 991,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/as\n// Alias a DOM element for use later\n// We don't have to traverse to the element\n// later in our code, we reference it with @\ncy.get('.as-table').find('tbody>tr').first().find('td').first().find('button').as('firstBtn'); // when we reference the alias, we place an\n// @ in front of its name\ncy.get('@firstBtn').click();\ncy.get('@firstBtn').should('have.class', 'btn-success').and('contain', 'Changed');",
              "err": {},
              "uuid": "d753b699-0948-46da-ad7c-e127c00f917a",
              "parentUUID": "89ac9609-7390-416c-ba4c-8559fd85d402",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".as() - alias a route for later use",
              "fullTitle": "Aliasing .as() - alias a route for later use",
              "timedOut": null,
              "duration": 1030,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Alias the route to wait for its response\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('eq', 200);",
              "err": {},
              "uuid": "ef57d486-3f74-4648-be2a-962b4729c41c",
              "parentUUID": "89ac9609-7390-416c-ba4c-8559fd85d402",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d753b699-0948-46da-ad7c-e127c00f917a",
            "ef57d486-3f74-4648-be2a-962b4729c41c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2021,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4561b490-1a59-4f5a-aa54-6b576679ab4e",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\assertions.spec.js",
      "file": "cypress\\integration\\examples\\assertions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6bd21649-dd6c-41a5-96f8-603661b6f69e",
          "title": "Assertions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c50a2a65-0eb4-4412-8f16-d1f61abdae72",
              "title": "Implicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": ".should() - make an assertion about the current subject",
                  "fullTitle": "Assertions Implicit Assertions .should() - make an assertion about the current subject",
                  "timedOut": null,
                  "duration": 966,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/should\ncy.get('.assertion-table').find('tbody tr:last').should('have.class', 'success').find('td').first() // checking the text of the <td> element in various ways\n.should('have.text', 'Column content').should('contain', 'Column content').should('have.html', 'Column content') // chai-jquery uses \"is()\" to check if element matches selector\n.should('match', 'td') // to match text content against a regular expression\n// first need to invoke jQuery method text()\n// and then match using regular expression\n.invoke('text').should('match', /column content/i); // a better way to check element's text content against a regular expression\n// is to use \"cy.contains\"\n// https://on.cypress.io/contains\ncy.get('.assertion-table').find('tbody tr:last') // finds first <td> element with text content matching regular expression\n.contains('td', /column content/i).should('be.visible'); // for more information about asserting element's text\n// see https://on.cypress.io/using-cypress-faq#How-do-I-get-an-elementâ€™s-text-contents",
                  "err": {},
                  "uuid": "bded7bf7-9a96-402a-96a9-404d0d919541",
                  "parentUUID": "c50a2a65-0eb4-4412-8f16-d1f61abdae72",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": ".and() - chain multiple assertions together",
                  "fullTitle": "Assertions Implicit Assertions .and() - chain multiple assertions together",
                  "timedOut": null,
                  "duration": 164,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/and\ncy.get('.assertions-link').should('have.class', 'active').and('have.attr', 'href').and('include', 'cypress.io');",
                  "err": {},
                  "uuid": "70c65c94-bc7a-4f13-a07c-7dfed3add8e2",
                  "parentUUID": "c50a2a65-0eb4-4412-8f16-d1f61abdae72",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "bded7bf7-9a96-402a-96a9-404d0d919541",
                "70c65c94-bc7a-4f13-a07c-7dfed3add8e2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1130,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "fc239d02-ce06-443d-b22a-433faa6360e1",
              "title": "Explicit Assertions",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "expect - make an assertion about a specified subject",
                  "fullTitle": "Assertions Explicit Assertions expect - make an assertion about a specified subject",
                  "timedOut": null,
                  "duration": 148,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// We can use Chai's BDD style assertions\nexpect(true).to.be[\"true\"];\nvar o = {\n  foo: 'bar'\n};\nexpect(o).to.equal(o);\nexpect(o).to.deep.equal({\n  foo: 'bar'\n}); // matching text using regular expression\nexpect('FooBar').to.match(/bar$/i);",
                  "err": {},
                  "uuid": "1a15ee58-6ecf-4e6d-a0d1-e13e6cfb429f",
                  "parentUUID": "fc239d02-ce06-443d-b22a-433faa6360e1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "pass your own callback function to should()",
                  "fullTitle": "Assertions Explicit Assertions pass your own callback function to should()",
                  "timedOut": null,
                  "duration": 155,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// Pass a function to should that can have any number\n// of explicit assertions within it.\n// The \".should(cb)\" function will be retried\n// automatically until it passes all your explicit assertions or times out.\ncy.get('.assertions-p').find('p').should(function ($p) {\n  // https://on.cypress.io/$\n  // return an array of texts from all of the p's\n  // @ts-ignore TS6133 unused variable\n  var texts = $p.map(function (i, el) {\n    return Cypress.$(el).text();\n  }); // jquery map returns jquery object\n  // and .get() convert this to simple array\n  var paragraphs = texts.get(); // array should have length of 3\n  expect(paragraphs, 'has 3 paragraphs').to.have.length(3); // use second argument to expect(...) to provide clear\n  // message with each assertion\n  expect(paragraphs, 'has expected text in each paragraph').to.deep.eq(['Some text from first p', 'More text from second p', 'And even more text from third p']);\n});",
                  "err": {},
                  "uuid": "b915eba6-a043-4b8f-bae8-00044c2fc427",
                  "parentUUID": "fc239d02-ce06-443d-b22a-433faa6360e1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "finds element by class name regex",
                  "fullTitle": "Assertions Explicit Assertions finds element by class name regex",
                  "timedOut": null,
                  "duration": 221,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div') // .should(cb) callback function will be retried\n.should(function ($div) {\n  expect($div).to.have.length(1);\n  var className = $div[0].className;\n  expect(className).to.match(/heading-/);\n}) // .then(cb) callback is not retried,\n// it either passes or fails\n.then(function ($div) {\n  expect($div, 'text content').to.have.text('Introduction');\n});",
                  "err": {},
                  "uuid": "c5e4e8a4-728b-4146-9bc9-a70fcad2dc39",
                  "parentUUID": "fc239d02-ce06-443d-b22a-433faa6360e1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "can throw any error",
                  "fullTitle": "Assertions Explicit Assertions can throw any error",
                  "timedOut": null,
                  "duration": 244,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('.docs-header').find('div').should(function ($div) {\n  if ($div.length !== 1) {\n    // you can throw your own errors\n    throw new Error('Did not find 1 element');\n  }\n  var className = $div[0].className;\n  if (!className.match(/heading-/)) {\n    throw new Error(\"Could not find class \\\"heading-\\\" in \".concat(className));\n  }\n});",
                  "err": {},
                  "uuid": "893cc2b4-51f7-4e61-b863-24fa3cad6174",
                  "parentUUID": "fc239d02-ce06-443d-b22a-433faa6360e1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "matches unknown text between two elements",
                  "fullTitle": "Assertions Explicit Assertions matches unknown text between two elements",
                  "timedOut": null,
                  "duration": 187,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "/**\n * Text from the first element.\n * @type {string}\n*/\nvar text;\n/**\n * Normalizes passed text,\n * useful before comparing text with spaces and different capitalization.\n * @param {string} s Text to normalize\n*/\nvar normalizeText = function normalizeText(s) {\n  return s.replace(/\\s/g, '').toLowerCase();\n};\ncy.get('.two-elements').find('.first').then(function ($first) {\n  // save text from the first element\n  text = normalizeText($first.text());\n});\ncy.get('.two-elements').find('.second').should(function ($div) {\n  // we can massage text before comparing\n  var secondText = normalizeText($div.text());\n  expect(secondText, 'second text').to.equal(text);\n});",
                  "err": {},
                  "uuid": "2d78b59b-c03d-4099-b8a5-f77a50f7b6f1",
                  "parentUUID": "fc239d02-ce06-443d-b22a-433faa6360e1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "assert - assert shape of an object",
                  "fullTitle": "Assertions Explicit Assertions assert - assert shape of an object",
                  "timedOut": null,
                  "duration": 203,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var person = {\n  name: 'Joe',\n  age: 20\n};\nassert.isObject(person, 'value is object');",
                  "err": {},
                  "uuid": "63165ad3-3ee6-433c-834f-3de2717b5baa",
                  "parentUUID": "fc239d02-ce06-443d-b22a-433faa6360e1",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "retries the should callback until assertions pass",
                  "fullTitle": "Assertions Explicit Assertions retries the should callback until assertions pass",
                  "timedOut": null,
                  "duration": 1621,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.get('#random-number').should(function ($div) {\n  var n = parseFloat($div.text());\n  expect(n).to.be.gte(1).and.be.lte(10);\n});",
                  "err": {},
                  "uuid": "6e8edd53-7730-4d63-a7cc-f03575903699",
                  "parentUUID": "fc239d02-ce06-443d-b22a-433faa6360e1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1a15ee58-6ecf-4e6d-a0d1-e13e6cfb429f",
                "b915eba6-a043-4b8f-bae8-00044c2fc427",
                "c5e4e8a4-728b-4146-9bc9-a70fcad2dc39",
                "893cc2b4-51f7-4e61-b863-24fa3cad6174",
                "2d78b59b-c03d-4099-b8a5-f77a50f7b6f1",
                "63165ad3-3ee6-433c-834f-3de2717b5baa",
                "6e8edd53-7730-4d63-a7cc-f03575903699"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2779,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "dc01348f-f173-4d51-a177-677401c92a65",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\connectors.spec.js",
      "file": "cypress\\integration\\examples\\connectors.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a5d4f6b0-4c13-4ec2-a7ee-6284d11fd42a",
          "title": "Connectors",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".each() - iterate over an array of elements",
              "fullTitle": "Connectors .each() - iterate over an array of elements",
              "timedOut": null,
              "duration": 939,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/each\ncy.get('.connectors-each-ul>li').each(function ($el, index, $list) {\n  console.log($el, index, $list);\n});",
              "err": {},
              "uuid": "89cb9eaa-e2fb-4a8a-ba07-6a33a4bd7681",
              "parentUUID": "a5d4f6b0-4c13-4ec2-a7ee-6284d11fd42a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".its() - get properties on the current subject",
              "fullTitle": "Connectors .its() - get properties on the current subject",
              "timedOut": null,
              "duration": 265,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/its\ncy.get('.connectors-its-ul>li') // calls the 'length' property yielding that value\n.its('length').should('be.gt', 2);",
              "err": {},
              "uuid": "6dda0425-4562-4ee1-a660-c9b4b0ef1c12",
              "parentUUID": "a5d4f6b0-4c13-4ec2-a7ee-6284d11fd42a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".invoke() - invoke a function on the current subject",
              "fullTitle": "Connectors .invoke() - invoke a function on the current subject",
              "timedOut": null,
              "duration": 220,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// our div is hidden in our script.js\n// $('.connectors-div').hide()\n// https://on.cypress.io/invoke\ncy.get('.connectors-div').should('be.hidden') // call the jquery method 'show' on the 'div.container'\n.invoke('show').should('be.visible');",
              "err": {},
              "uuid": "befb6fef-5dfe-4495-b9cd-4b0a822a56cc",
              "parentUUID": "a5d4f6b0-4c13-4ec2-a7ee-6284d11fd42a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".spread() - spread an array as individual args to callback function",
              "fullTitle": "Connectors .spread() - spread an array as individual args to callback function",
              "timedOut": null,
              "duration": 183,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spread\nvar arr = ['foo', 'bar', 'baz'];\ncy.wrap(arr).spread(function (foo, bar, baz) {\n  expect(foo).to.eq('foo');\n  expect(bar).to.eq('bar');\n  expect(baz).to.eq('baz');\n});",
              "err": {},
              "uuid": "0a2a3a9b-a6ca-4553-adb8-d80ce9afebad",
              "parentUUID": "a5d4f6b0-4c13-4ec2-a7ee-6284d11fd42a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "534249fc-d470-42ee-953f-f449ec99e58c",
              "title": ".then()",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "invokes a callback function with the current subject",
                  "fullTitle": "Connectors .then() invokes a callback function with the current subject",
                  "timedOut": null,
                  "duration": 192,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/then\ncy.get('.connectors-list > li').then(function ($lis) {\n  expect($lis, '3 items').to.have.length(3);\n  expect($lis.eq(0), 'first item').to.contain('Walk the dog');\n  expect($lis.eq(1), 'second item').to.contain('Feed the cat');\n  expect($lis.eq(2), 'third item').to.contain('Write JavaScript');\n});",
                  "err": {},
                  "uuid": "4a18f40b-ec5e-4333-b8bc-dd35ba0735d2",
                  "parentUUID": "534249fc-d470-42ee-953f-f449ec99e58c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the returned value to the next command",
                  "fullTitle": "Connectors .then() yields the returned value to the next command",
                  "timedOut": null,
                  "duration": 171,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1);\n  return 2;\n}).then(function (num) {\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "daa89593-3a42-4998-89cd-048065ae5980",
                  "parentUUID": "534249fc-d470-42ee-953f-f449ec99e58c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the original subject without return",
                  "fullTitle": "Connectors .then() yields the original subject without return",
                  "timedOut": null,
                  "duration": 173,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1); // note that nothing is returned from this callback\n}).then(function (num) {\n  // this callback receives the original unchanged value 1\n  expect(num).to.equal(1);\n});",
                  "err": {},
                  "uuid": "b5220b6a-f0d2-43c5-b0df-dca70cd08314",
                  "parentUUID": "534249fc-d470-42ee-953f-f449ec99e58c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "yields the value yielded by the last Cypress command inside",
                  "fullTitle": "Connectors .then() yields the value yielded by the last Cypress command inside",
                  "timedOut": null,
                  "duration": 150,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.wrap(1).then(function (num) {\n  expect(num).to.equal(1); // note how we run a Cypress command\n  // the result yielded by this Cypress command\n  // will be passed to the second \".then\"\n  cy.wrap(2);\n}).then(function (num) {\n  // this callback receives the value yielded by \"cy.wrap(2)\"\n  expect(num).to.equal(2);\n});",
                  "err": {},
                  "uuid": "a1f39ddf-5f71-4e60-acde-766874842cdf",
                  "parentUUID": "534249fc-d470-42ee-953f-f449ec99e58c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4a18f40b-ec5e-4333-b8bc-dd35ba0735d2",
                "daa89593-3a42-4998-89cd-048065ae5980",
                "b5220b6a-f0d2-43c5-b0df-dca70cd08314",
                "a1f39ddf-5f71-4e60-acde-766874842cdf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 686,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "89cb9eaa-e2fb-4a8a-ba07-6a33a4bd7681",
            "6dda0425-4562-4ee1-a660-c9b4b0ef1c12",
            "befb6fef-5dfe-4495-b9cd-4b0a822a56cc",
            "0a2a3a9b-a6ca-4553-adb8-d80ce9afebad"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1607,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "978ab343-8c2d-4824-a27e-41d34fc1a4da",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\cookies.spec.js",
      "file": "cypress\\integration\\examples\\cookies.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "fcc28d0f-04d5-4cb3-90dc-fc27cd283ea1",
          "title": "Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.getCookie() - get a browser cookie",
              "fullTitle": "Cookies cy.getCookie() - get a browser cookie",
              "timedOut": null,
              "duration": 662,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookie\ncy.get('#getCookie .set-a-cookie').click(); // cy.getCookie() yields a cookie object\ncy.getCookie('token').should('have.property', 'value', '123ABC');",
              "err": {},
              "uuid": "889f3535-f514-4aae-9c2e-80994c7f622b",
              "parentUUID": "fcc28d0f-04d5-4cb3-90dc-fc27cd283ea1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.getCookies() - get browser cookies",
              "fullTitle": "Cookies cy.getCookies() - get browser cookies",
              "timedOut": null,
              "duration": 257,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/getcookies\ncy.getCookies().should('be.empty');\ncy.get('#getCookies .set-a-cookie').click(); // cy.getCookies() yields an array of cookies\ncy.getCookies().should('have.length', 1).should(function (cookies) {\n  // each cookie has these properties\n  expect(cookies[0]).to.have.property('name', 'token');\n  expect(cookies[0]).to.have.property('value', '123ABC');\n  expect(cookies[0]).to.have.property('httpOnly', false);\n  expect(cookies[0]).to.have.property('secure', false);\n  expect(cookies[0]).to.have.property('domain');\n  expect(cookies[0]).to.have.property('path');\n});",
              "err": {},
              "uuid": "2edba7cc-bf80-4b37-8b7a-7e7a1d50a5d6",
              "parentUUID": "fcc28d0f-04d5-4cb3-90dc-fc27cd283ea1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.setCookie() - set a browser cookie",
              "fullTitle": "Cookies cy.setCookie() - set a browser cookie",
              "timedOut": null,
              "duration": 138,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/setcookie\ncy.getCookies().should('be.empty');\ncy.setCookie('foo', 'bar'); // cy.getCookie() yields a cookie object\ncy.getCookie('foo').should('have.property', 'value', 'bar');",
              "err": {},
              "uuid": "888684c9-48a0-49a1-a4a6-868ac614ffbc",
              "parentUUID": "fcc28d0f-04d5-4cb3-90dc-fc27cd283ea1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookie() - clear a browser cookie",
              "fullTitle": "Cookies cy.clearCookie() - clear a browser cookie",
              "timedOut": null,
              "duration": 253,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookie\ncy.getCookie('token').should('be.null');\ncy.get('#clearCookie .set-a-cookie').click();\ncy.getCookie('token').should('have.property', 'value', '123ABC'); // cy.clearCookies() yields null\ncy.clearCookie('token').should('be.null');\ncy.getCookie('token').should('be.null');",
              "err": {},
              "uuid": "b55fe018-3095-440f-9d92-3fbc59925d86",
              "parentUUID": "fcc28d0f-04d5-4cb3-90dc-fc27cd283ea1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clearCookies() - clear browser cookies",
              "fullTitle": "Cookies cy.clearCookies() - clear browser cookies",
              "timedOut": null,
              "duration": 225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearcookies\ncy.getCookies().should('be.empty');\ncy.get('#clearCookies .set-a-cookie').click();\ncy.getCookies().should('have.length', 1); // cy.clearCookies() yields null\ncy.clearCookies();\ncy.getCookies().should('be.empty');",
              "err": {},
              "uuid": "04f5e4f3-023a-41f4-bc7c-febd2b6449a6",
              "parentUUID": "fcc28d0f-04d5-4cb3-90dc-fc27cd283ea1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "889f3535-f514-4aae-9c2e-80994c7f622b",
            "2edba7cc-bf80-4b37-8b7a-7e7a1d50a5d6",
            "888684c9-48a0-49a1-a4a6-868ac614ffbc",
            "b55fe018-3095-440f-9d92-3fbc59925d86",
            "04f5e4f3-023a-41f4-bc7c-febd2b6449a6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1535,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "85ca8844-3051-4e3d-b84a-9008a41110d8",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\cypress_api.spec.js",
      "file": "cypress\\integration\\examples\\cypress_api.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f86ced7e-d026-4a22-a0b4-d09a07bfc229",
          "title": "Cypress.Commands",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".add() - create a custom command",
              "fullTitle": "Cypress.Commands .add() - create a custom command",
              "timedOut": null,
              "duration": 494,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Commands.add('console', {\n  prevSubject: true\n}, function (subject, method) {\n  // the previous subject is automatically received\n  // and the commands arguments are shifted\n  // allow us to change the console method used\n  method = method || 'log'; // log the subject to the console\n  // @ts-ignore TS7017\n  console[method]('The subject is', subject); // whatever we return becomes the new subject\n  // we don't want to change the subject so\n  // we return whatever was passed in\n  return subject;\n}); // @ts-ignore TS2339\ncy.get('button').console('info').then(function ($button) {// subject is still $button\n});",
              "err": {},
              "uuid": "eb291079-a48d-4a14-9122-224eaec7dd9a",
              "parentUUID": "f86ced7e-d026-4a22-a0b4-d09a07bfc229",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "eb291079-a48d-4a14-9122-224eaec7dd9a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 494,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fe1d99d4-e49f-4475-b09f-3e4199e79dbb",
          "title": "Cypress.Cookies",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".debug() - enable or disable debugging",
              "fullTitle": "Cypress.Cookies .debug() - enable or disable debugging",
              "timedOut": null,
              "duration": 354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "Cypress.Cookies.debug(true); // Cypress will now log in the console when\n// cookies are set or cleared\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');\ncy.clearCookie('fakeCookie');\ncy.setCookie('fakeCookie', '123ABC');",
              "err": {},
              "uuid": "dbc41735-80ec-4da6-a08c-2870a1db1214",
              "parentUUID": "fe1d99d4-e49f-4475-b09f-3e4199e79dbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".preserveOnce() - preserve cookies by key",
              "fullTitle": "Cypress.Cookies .preserveOnce() - preserve cookies by key",
              "timedOut": null,
              "duration": 345,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// normally cookies are reset after each test\ncy.getCookie('fakeCookie').should('not.be.ok'); // preserving a cookie will not clear it when\n// the next test starts\ncy.setCookie('lastCookie', '789XYZ');\nCypress.Cookies.preserveOnce('lastCookie');",
              "err": {},
              "uuid": "a48c205a-0c47-40c2-b922-763dcaf00232",
              "parentUUID": "fe1d99d4-e49f-4475-b09f-3e4199e79dbb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".defaults() - set defaults for all cookies",
              "fullTitle": "Cypress.Cookies .defaults() - set defaults for all cookies",
              "timedOut": null,
              "duration": 187,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// now any cookie with the name 'session_id' will\n// not be cleared before each new test runs\nCypress.Cookies.defaults({\n  preserve: 'session_id'\n});",
              "err": {},
              "uuid": "2a9b45c1-f74f-4a38-8ce1-03ba74775e95",
              "parentUUID": "fe1d99d4-e49f-4475-b09f-3e4199e79dbb",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dbc41735-80ec-4da6-a08c-2870a1db1214",
            "a48c205a-0c47-40c2-b922-763dcaf00232",
            "2a9b45c1-f74f-4a38-8ce1-03ba74775e95"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 886,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "cd6a4aef-a1fc-4337-a98e-dfe541f274a3",
          "title": "Cypress.arch",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get CPU architecture name of underlying OS",
              "fullTitle": "Cypress.arch Get CPU architecture name of underlying OS",
              "timedOut": null,
              "duration": 290,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/arch\nexpect(Cypress.arch).to.exist;",
              "err": {},
              "uuid": "87e6a8af-2183-4df4-a284-5d6103af815d",
              "parentUUID": "cd6a4aef-a1fc-4337-a98e-dfe541f274a3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "87e6a8af-2183-4df4-a284-5d6103af815d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 290,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "47d2a326-1013-4f3f-96fc-837b1d76e4d9",
          "title": "Cypress.config()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get and set configuration options",
              "fullTitle": "Cypress.config() Get and set configuration options",
              "timedOut": null,
              "duration": 151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/config\nvar myConfig = Cypress.config();\nexpect(myConfig).to.have.property('animationDistanceThreshold', 5);\nexpect(myConfig).to.have.property('baseUrl', null);\nexpect(myConfig).to.have.property('defaultCommandTimeout', 4000);\nexpect(myConfig).to.have.property('requestTimeout', 5000);\nexpect(myConfig).to.have.property('responseTimeout', 30000);\nexpect(myConfig).to.have.property('viewportHeight', 660);\nexpect(myConfig).to.have.property('viewportWidth', 1000);\nexpect(myConfig).to.have.property('pageLoadTimeout', 60000);\nexpect(myConfig).to.have.property('waitForAnimations', true);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(60000); // this will change the config for the rest of your tests!\nCypress.config('pageLoadTimeout', 20000);\nexpect(Cypress.config('pageLoadTimeout')).to.eq(20000);\nCypress.config('pageLoadTimeout', 60000);",
              "err": {},
              "uuid": "b0c8d279-b898-46c4-a2b7-2cc1c3e9ee1b",
              "parentUUID": "47d2a326-1013-4f3f-96fc-837b1d76e4d9",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b0c8d279-b898-46c4-a2b7-2cc1c3e9ee1b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 151,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9f596b92-0ac0-4237-9364-2b55e0afb70b",
          "title": "Cypress.dom",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".isHidden() - determine if a DOM element is hidden",
              "fullTitle": "Cypress.dom .isHidden() - determine if a DOM element is hidden",
              "timedOut": null,
              "duration": 136,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var hiddenP = Cypress.$('.dom-p p.hidden').get(0);\nvar visibleP = Cypress.$('.dom-p p.visible').get(0); // our first paragraph has css class 'hidden'\nexpect(Cypress.dom.isHidden(hiddenP)).to.be[\"true\"];\nexpect(Cypress.dom.isHidden(visibleP)).to.be[\"false\"];",
              "err": {},
              "uuid": "33dda1a9-ffd3-4789-9e2d-2a4ee9416983",
              "parentUUID": "9f596b92-0ac0-4237-9364-2b55e0afb70b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "33dda1a9-ffd3-4789-9e2d-2a4ee9416983"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 136,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "09b734e1-26ab-44d9-a746-c6dd4fc4e958",
          "title": "Cypress.env()",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get environment variables",
              "fullTitle": "Cypress.env() Get environment variables",
              "timedOut": null,
              "duration": 116,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/env\n// set multiple environment variables\nCypress.env({\n  host: 'veronica.dev.local',\n  api_server: 'http://localhost:8888/v1/'\n}); // get environment variable\nexpect(Cypress.env('host')).to.eq('veronica.dev.local'); // set environment variable\nCypress.env('api_server', 'http://localhost:8888/v2/');\nexpect(Cypress.env('api_server')).to.eq('http://localhost:8888/v2/'); // get all environment variable\nexpect(Cypress.env()).to.have.property('host', 'veronica.dev.local');\nexpect(Cypress.env()).to.have.property('api_server', 'http://localhost:8888/v2/');",
              "err": {},
              "uuid": "9dbc0986-3f6a-4f30-9c98-27abcb855c17",
              "parentUUID": "09b734e1-26ab-44d9-a746-c6dd4fc4e958",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9dbc0986-3f6a-4f30-9c98-27abcb855c17"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 116,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "766cab6c-8fe4-494d-8a14-6a52fa5aec62",
          "title": "Cypress.log",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Control what is printed to the Command Log",
              "fullTitle": "Cypress.log Control what is printed to the Command Log",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/cypress-log",
              "err": {},
              "uuid": "dfb192b5-d70e-4365-8155-6bb4ebf52d72",
              "parentUUID": "766cab6c-8fe4-494d-8a14-6a52fa5aec62",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dfb192b5-d70e-4365-8155-6bb4ebf52d72"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 124,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e44ba4d0-2c35-44cc-af8d-7eb0aa652808",
          "title": "Cypress.platform",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get underlying OS name",
              "fullTitle": "Cypress.platform Get underlying OS name",
              "timedOut": null,
              "duration": 124,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/platform\nexpect(Cypress.platform).to.be.exist;",
              "err": {},
              "uuid": "906d659f-bf0c-4e53-bfc4-8b57df1398f1",
              "parentUUID": "e44ba4d0-2c35-44cc-af8d-7eb0aa652808",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "906d659f-bf0c-4e53-bfc4-8b57df1398f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 124,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "2af7d4cd-5ce4-4444-bbdb-841fb37e3a3b",
          "title": "Cypress.version",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current version of Cypress being run",
              "fullTitle": "Cypress.version Get current version of Cypress being run",
              "timedOut": null,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/version\nexpect(Cypress.version).to.be.exist;",
              "err": {},
              "uuid": "63de9926-a867-45bd-b807-81785f767872",
              "parentUUID": "2af7d4cd-5ce4-4444-bbdb-841fb37e3a3b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "63de9926-a867-45bd-b807-81785f767872"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 130,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "0951acba-4c91-489d-8500-dd88cb7d452b",
          "title": "Cypress.spec",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get current spec information",
              "fullTitle": "Cypress.spec Get current spec information",
              "timedOut": null,
              "duration": 162,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spec\n// wrap the object so we can inspect it easily by clicking in the command log\ncy.wrap(Cypress.spec).should('include.keys', ['name', 'relative', 'absolute']);",
              "err": {},
              "uuid": "d6d3b3ad-0d69-46fb-b11e-2e1336a388e2",
              "parentUUID": "0951acba-4c91-489d-8500-dd88cb7d452b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6d3b3ad-0d69-46fb-b11e-2e1336a388e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 162,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "9285b454-0696-45fb-9bc5-1ed0187e1921",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\files.spec.js",
      "file": "cypress\\integration\\examples\\files.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "769ef64b-809d-4f16-af5d-f20cab5ad99e",
          "title": "Files",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.fixture() - load a fixture",
              "fullTitle": "Files cy.fixture() - load a fixture",
              "timedOut": null,
              "duration": 701,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/fixture\n// Instead of writing a response inline you can\n// use a fixture file's content.\n// when application makes an Ajax request matching \"GET **/comments/*\"\n// Cypress will intercept it and reply with the object in `example.json` fixture\ncy.intercept('GET', '**/comments/*', {\n  fixture: 'example.json'\n}).as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.fixture-btn').click();\ncy.wait('@getComment').its('response.body').should('have.property', 'name').and('include', 'Using fixtures to represent data');",
              "err": {},
              "uuid": "37497751-96f6-4668-962c-b2274fb4b6d9",
              "parentUUID": "769ef64b-809d-4f16-af5d-f20cab5ad99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.fixture() or require - load a fixture",
              "fullTitle": "Files cy.fixture() or require - load a fixture",
              "timedOut": null,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// we are inside the \"function () { ... }\"\n// callback and can use test context object \"this\"\n// \"this.example\" was loaded in \"beforeEach\" function callback\nexpect(this.example, 'fixture in the test context').to.deep.equal(requiredExample); // or use \"cy.wrap\" and \"should('deep.equal', ...)\" assertion\n// @ts-ignore\ncy.wrap(this.example, 'fixture vs require').should('deep.equal', requiredExample);",
              "err": {},
              "uuid": "683b8114-c7e3-45d5-bae4-3d665fd86787",
              "parentUUID": "769ef64b-809d-4f16-af5d-f20cab5ad99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.readFile() - read file contents",
              "fullTitle": "Files cy.readFile() - read file contents",
              "timedOut": null,
              "duration": 145,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/readfile\n// You can read a file and yield its contents\n// The filePath is relative to your project's root.\ncy.readFile('cypress.json').then(function (json) {\n  expect(json).to.be.an('object');\n});",
              "err": {},
              "uuid": "10720ddf-7953-4200-9199-ebed45d1c0c5",
              "parentUUID": "769ef64b-809d-4f16-af5d-f20cab5ad99e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.writeFile() - write to a file",
              "fullTitle": "Files cy.writeFile() - write to a file",
              "timedOut": null,
              "duration": 585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/writefile\n// You can write to a file\n// Use a response from a request to automatically\n// generate a fixture file for use later\ncy.request('https://jsonplaceholder.cypress.io/users').then(function (response) {\n  cy.writeFile('cypress/fixtures/users.json', response.body);\n});\ncy.fixture('users').should(function (users) {\n  expect(users[0].name).to.exist;\n}); // JavaScript arrays and objects are stringified\n// and formatted into text.\ncy.writeFile('cypress/fixtures/profile.json', {\n  id: 8739,\n  name: 'Jane',\n  email: 'jane@example.com'\n});\ncy.fixture('profile').should(function (profile) {\n  expect(profile.name).to.eq('Jane');\n});",
              "err": {},
              "uuid": "37b82f77-122d-43bd-8523-e762cc5727a1",
              "parentUUID": "769ef64b-809d-4f16-af5d-f20cab5ad99e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37497751-96f6-4668-962c-b2274fb4b6d9",
            "683b8114-c7e3-45d5-bae4-3d665fd86787",
            "10720ddf-7953-4200-9199-ebed45d1c0c5",
            "37b82f77-122d-43bd-8523-e762cc5727a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1579,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "4517451f-3b3a-423d-bbbd-50c04139fb88",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\local_storage.spec.js",
      "file": "cypress\\integration\\examples\\local_storage.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c7a54378-22ae-4d8f-bd82-c41dc1f92c83",
          "title": "Local Storage",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.clearLocalStorage() - clear all data in local storage",
              "fullTitle": "Local Storage cy.clearLocalStorage() - clear all data in local storage",
              "timedOut": null,
              "duration": 975,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clearlocalstorage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n}); // clearLocalStorage() yields the localStorage object\ncy.clearLocalStorage().should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.be[\"null\"];\n  expect(ls.getItem('prop3')).to.be[\"null\"];\n}); // Clear key matching string in Local Storage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage('prop1').should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.eq('blue');\n  expect(ls.getItem('prop3')).to.eq('magenta');\n}); // Clear keys matching regex in Local Storage\ncy.get('.ls-btn').click().should(function () {\n  expect(localStorage.getItem('prop1')).to.eq('red');\n  expect(localStorage.getItem('prop2')).to.eq('blue');\n  expect(localStorage.getItem('prop3')).to.eq('magenta');\n});\ncy.clearLocalStorage(/prop1|2/).should(function (ls) {\n  expect(ls.getItem('prop1')).to.be[\"null\"];\n  expect(ls.getItem('prop2')).to.be[\"null\"];\n  expect(ls.getItem('prop3')).to.eq('magenta');\n});",
              "err": {},
              "uuid": "ba740194-d9df-4d7d-a76d-4376aa490c2a",
              "parentUUID": "c7a54378-22ae-4d8f-bd82-c41dc1f92c83",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba740194-d9df-4d7d-a76d-4376aa490c2a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 975,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "091d89ff-838f-49f4-a48e-a55c38bcf114",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\location.spec.js",
      "file": "cypress\\integration\\examples\\location.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0907b87d-b4f5-44f8-9d36-4b37de98dd63",
          "title": "Location",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.hash() - get the current URL hash",
              "fullTitle": "Location cy.hash() - get the current URL hash",
              "timedOut": null,
              "duration": 505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/hash\ncy.hash().should('be.empty');",
              "err": {},
              "uuid": "f49d21bc-8019-414a-b190-4b6522e53920",
              "parentUUID": "0907b87d-b4f5-44f8-9d36-4b37de98dd63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.location() - get window.location",
              "fullTitle": "Location cy.location() - get window.location",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/location\ncy.location().should(function (location) {\n  expect(location.hash).to.be.empty;\n  expect(location.href).to.eq('https://example.cypress.io/commands/location');\n  expect(location.host).to.eq('example.cypress.io');\n  expect(location.hostname).to.eq('example.cypress.io');\n  expect(location.origin).to.eq('https://example.cypress.io');\n  expect(location.pathname).to.eq('/commands/location');\n  expect(location.port).to.eq('');\n  expect(location.protocol).to.eq('https:');\n  expect(location.search).to.be.empty;\n});",
              "err": {},
              "uuid": "604242b6-02ce-4b1d-a740-7e5a6de9e31f",
              "parentUUID": "0907b87d-b4f5-44f8-9d36-4b37de98dd63",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.url() - get the current URL",
              "fullTitle": "Location cy.url() - get the current URL",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/url\ncy.url().should('eq', 'https://example.cypress.io/commands/location');",
              "err": {},
              "uuid": "26e7fee7-ad36-4f54-be93-accbc251f8a1",
              "parentUUID": "0907b87d-b4f5-44f8-9d36-4b37de98dd63",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f49d21bc-8019-414a-b190-4b6522e53920",
            "604242b6-02ce-4b1d-a740-7e5a6de9e31f",
            "26e7fee7-ad36-4f54-be93-accbc251f8a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 774,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "591dacd9-1c89-4ceb-8d4c-c81d9a43a9aa",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\misc.spec.js",
      "file": "cypress\\integration\\examples\\misc.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "8247599d-6772-4da7-9adb-0ef101478b9f",
          "title": "Misc",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".end() - end the command chain",
              "fullTitle": "Misc .end() - end the command chain",
              "timedOut": null,
              "duration": 755,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/end\n// cy.end is useful when you want to end a chain of commands\n// and force Cypress to re-query from the root element\ncy.get('.misc-table').within(function () {\n  // ends the current chain and yields null\n  cy.contains('Cheryl').click().end(); // queries the entire table again\n  cy.contains('Charles').click();\n});",
              "err": {},
              "uuid": "317913ae-85b7-432c-b94a-470be38ac9e3",
              "parentUUID": "8247599d-6772-4da7-9adb-0ef101478b9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.exec() - execute a system command",
              "fullTitle": "Misc cy.exec() - execute a system command",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// execute a system command.\n// so you can take actions necessary for\n// your test outside the scope of Cypress.\n// https://on.cypress.io/exec\n// we can use Cypress.platform string to\n// select appropriate command\n// https://on.cypress/io/platform\ncy.log(\"Platform \".concat(Cypress.platform, \" architecture \").concat(Cypress.arch)); // on CircleCI Windows build machines we have a failure to run bash shell\n// https://github.com/cypress-io/cypress/issues/5169\n// so skip some of the tests by passing flag \"--env circle=true\"\nvar isCircleOnWindows = Cypress.platform === 'win32' && Cypress.env('circle');\nif (isCircleOnWindows) {\n  cy.log('Skipping test on CircleCI');\n  return;\n} // cy.exec problem on Shippable CI\n// https://github.com/cypress-io/cypress/issues/6718\n\nvar isShippable = Cypress.platform === 'linux' && Cypress.env('shippable');\nif (isShippable) {\n  cy.log('Skipping test on ShippableCI');\n  return;\n}\ncy.exec('echo Jane Lane').its('stdout').should('contain', 'Jane Lane');\nif (Cypress.platform === 'win32') {\n  cy.exec('print cypress.json').its('stderr').should('be.empty');\n} else {\n  cy.exec('cat cypress.json').its('stderr').should('be.empty');\n  cy.exec('pwd').its('code').should('eq', 0);\n}",
              "err": {},
              "uuid": "bd5cc241-12ae-4a41-aa5d-3d8ce39e17d1",
              "parentUUID": "8247599d-6772-4da7-9adb-0ef101478b9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.focused() - get the DOM element that has focus",
              "fullTitle": "Misc cy.focused() - get the DOM element that has focus",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focused\ncy.get('.misc-form').find('#name').click();\ncy.focused().should('have.id', 'name');\ncy.get('.misc-form').find('#description').click();\ncy.focused().should('have.id', 'description');",
              "err": {},
              "uuid": "68352399-0ed4-4808-8008-c9cb2158568e",
              "parentUUID": "8247599d-6772-4da7-9adb-0ef101478b9f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wrap() - wrap an object",
              "fullTitle": "Misc cy.wrap() - wrap an object",
              "timedOut": null,
              "duration": 127,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/wrap\ncy.wrap({\n  foo: 'bar'\n}).should('have.property', 'foo').and('include', 'bar');",
              "err": {},
              "uuid": "d2a6261c-a91f-4b12-91eb-cb4f0e80908e",
              "parentUUID": "8247599d-6772-4da7-9adb-0ef101478b9f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "723e3af8-c318-42b9-b998-ff3bfbe80826",
              "title": "Cypress.Screenshot",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "cy.screenshot() - take a screenshot",
                  "fullTitle": "Misc Cypress.Screenshot cy.screenshot() - take a screenshot",
                  "timedOut": null,
                  "duration": 2613,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "// https://on.cypress.io/screenshot\ncy.screenshot('my-image');",
                  "err": {},
                  "uuid": "61e5493e-947d-439e-a9d4-6e87a296d0c0",
                  "parentUUID": "723e3af8-c318-42b9-b998-ff3bfbe80826",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Cypress.Screenshot.defaults() - change default config of screenshots",
                  "fullTitle": "Misc Cypress.Screenshot Cypress.Screenshot.defaults() - change default config of screenshots",
                  "timedOut": null,
                  "duration": 353,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "Cypress.Screenshot.defaults({\n  blackout: ['.foo'],\n  capture: 'viewport',\n  clip: {\n    x: 0,\n    y: 0,\n    width: 200,\n    height: 200\n  },\n  scale: false,\n  disableTimersAndAnimations: true,\n  screenshotOnRunFailure: true,\n  onBeforeScreenshot: function onBeforeScreenshot() {},\n  onAfterScreenshot: function onAfterScreenshot() {}\n});",
                  "err": {},
                  "uuid": "5f9f91b5-018b-4605-8dc7-424fb45d1139",
                  "parentUUID": "723e3af8-c318-42b9-b998-ff3bfbe80826",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "61e5493e-947d-439e-a9d4-6e87a296d0c0",
                "5f9f91b5-018b-4605-8dc7-424fb45d1139"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2966,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [
            "317913ae-85b7-432c-b94a-470be38ac9e3",
            "bd5cc241-12ae-4a41-aa5d-3d8ce39e17d1",
            "68352399-0ed4-4808-8008-c9cb2158568e",
            "d2a6261c-a91f-4b12-91eb-cb4f0e80908e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1425,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "fa7e80e9-407b-471f-a568-71ecf8cae3ea",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\navigation.spec.js",
      "file": "cypress\\integration\\examples\\navigation.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "9f362efb-88d2-4fbf-b75f-ee654f961fbd",
          "title": "Navigation",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.go() - go back or forward in the browser's history",
              "fullTitle": "Navigation cy.go() - go back or forward in the browser's history",
              "timedOut": null,
              "duration": 1480,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/go\ncy.location('pathname').should('include', 'navigation');\ncy.go('back');\ncy.location('pathname').should('not.include', 'navigation');\ncy.go('forward');\ncy.location('pathname').should('include', 'navigation'); // clicking back\ncy.go(-1);\ncy.location('pathname').should('not.include', 'navigation'); // clicking forward\ncy.go(1);\ncy.location('pathname').should('include', 'navigation');",
              "err": {},
              "uuid": "cc40b661-7b55-4f84-bbdc-4f68b54e539f",
              "parentUUID": "9f362efb-88d2-4fbf-b75f-ee654f961fbd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.reload() - reload the page",
              "fullTitle": "Navigation cy.reload() - reload the page",
              "timedOut": null,
              "duration": 596,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/reload\ncy.reload(); // reload the page without using the cache\ncy.reload(true);",
              "err": {},
              "uuid": "db27d079-6552-42a0-8d57-49db5f697eb9",
              "parentUUID": "9f362efb-88d2-4fbf-b75f-ee654f961fbd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.visit() - visit a remote url",
              "fullTitle": "Navigation cy.visit() - visit a remote url",
              "timedOut": null,
              "duration": 414,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/visit\n// Visit any sub-domain of your current domain\n// Pass options to the visit\ncy.visit('https://example.cypress.io/commands/navigation', {\n  timeout: 50000,\n  // increase total time for the visit to resolve\n  onBeforeLoad: function onBeforeLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === 'object').to.be[\"true\"];\n  },\n  onLoad: function onLoad(contentWindow) {\n    // contentWindow is the remote page's window object\n    expect((0, _typeof2[\"default\"])(contentWindow) === 'object').to.be[\"true\"];\n  }\n});",
              "err": {},
              "uuid": "2bf8011b-5b3d-4548-84c2-2919ecdae7cd",
              "parentUUID": "9f362efb-88d2-4fbf-b75f-ee654f961fbd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "cc40b661-7b55-4f84-bbdc-4f68b54e539f",
            "db27d079-6552-42a0-8d57-49db5f697eb9",
            "2bf8011b-5b3d-4548-84c2-2919ecdae7cd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2490,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "3dd9205d-b567-4016-b6d4-744bc33f0020",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\network_requests.spec.js",
      "file": "cypress\\integration\\examples\\network_requests.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5e9d4cde-6cbb-4668-9d6e-fdc990759517",
          "title": "Network Requests",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.request() - make an XHR request",
              "fullTitle": "Network Requests cy.request() - make an XHR request",
              "timedOut": null,
              "duration": 1364,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/request\ncy.request('https://jsonplaceholder.cypress.io/comments').should(function (response) {\n  expect(response.status).to.eq(200); // the server sometimes gets an extra comment posted from another machine\n  // which gets returned as 1 extra object\n  expect(response.body).to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.have.property('headers');\n  expect(response).to.have.property('duration');\n});",
              "err": {},
              "uuid": "6d9e0c7a-8c50-4150-85d3-56b6750681c6",
              "parentUUID": "5e9d4cde-6cbb-4668-9d6e-fdc990759517",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - verify response using BDD syntax",
              "fullTitle": "Network Requests cy.request() - verify response using BDD syntax",
              "timedOut": null,
              "duration": 864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('https://jsonplaceholder.cypress.io/comments').then(function (response) {\n  // https://on.cypress.io/assertions\n  expect(response).property('status').to.equal(200);\n  expect(response).property('body').to.have.property('length').and.be.oneOf([500, 501]);\n  expect(response).to.include.keys('headers', 'duration');\n});",
              "err": {},
              "uuid": "4c2f556e-6ce3-43f0-8fd9-d5731a4dae91",
              "parentUUID": "5e9d4cde-6cbb-4668-9d6e-fdc990759517",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() with query parameters",
              "fullTitle": "Network Requests cy.request() with query parameters",
              "timedOut": null,
              "duration": 457,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// will execute request\n// https://jsonplaceholder.cypress.io/comments?postId=1&id=3\ncy.request({\n  url: 'https://jsonplaceholder.cypress.io/comments',\n  qs: {\n    postId: 1,\n    id: 3\n  }\n}).its('body').should('be.an', 'array').and('have.length', 1).its('0') // yields first element of the array\n.should('contain', {\n  postId: 1,\n  id: 3\n});",
              "err": {},
              "uuid": "da94d613-1342-420d-a892-e59a2a0c81f6",
              "parentUUID": "5e9d4cde-6cbb-4668-9d6e-fdc990759517",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - pass result to the second request",
              "fullTitle": "Network Requests cy.request() - pass result to the second request",
              "timedOut": null,
              "duration": 1009,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// first, let's find out the userId of the first user we have\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body') // yields the response object\n.its('0') // yields the first element of the returned list\n// the above two commands its('body').its('0')\n// can be written as its('body.0')\n// if you do not care about TypeScript checks\n.then(function (user) {\n  expect(user).property('id').to.be.a('number'); // make a new post on behalf of the user\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  });\n}) // note that the value here is the returned value of the 2nd request\n// which is the new post object\n.then(function (response) {\n  expect(response).property('status').to.equal(201); // new entity created\n  expect(response).property('body').to.contain({\n    title: 'Cypress Test Runner'\n  }); // we don't know the exact post id - only that it will be > 100\n  // since JSONPlaceholder has built-in 100 posts\n  expect(response.body).property('id').to.be.a('number').and.to.be.gt(100); // we don't know the user id here - since it was in above closure\n  // so in this test just confirm that the property is there\n  expect(response.body).property('userId').to.be.a('number');\n});",
              "err": {},
              "uuid": "aa502295-3896-43ac-9ff8-b9ef6add6422",
              "parentUUID": "5e9d4cde-6cbb-4668-9d6e-fdc990759517",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.request() - save response in the shared test context",
              "fullTitle": "Network Requests cy.request() - save response in the shared test context",
              "timedOut": null,
              "duration": 680,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/variables-and-aliases\ncy.request('https://jsonplaceholder.cypress.io/users?_limit=1').its('body').its('0') // yields the first element of the returned list\n.as('user') // saves the object in the test context\n.then(function () {\n  // NOTE ðŸ‘€\n  //  By the time this callback runs the \"as('user')\" command\n  //  has saved the user object in the test context.\n  //  To access the test context we need to use\n  //  the \"function () { ... }\" callback form,\n  //  otherwise \"this\" points at a wrong or undefined object!\n  cy.request('POST', 'https://jsonplaceholder.cypress.io/posts', {\n    userId: this.user.id,\n    title: 'Cypress Test Runner',\n    body: 'Fast, easy and reliable testing for anything that runs in a browser.'\n  }).its('body').as('post'); // save the new post from the response\n}).then(function () {\n  // When this callback runs, both \"cy.request\" API commands have finished\n  // and the test context has \"user\" and \"post\" objects set.\n  // Let's verify them.\n  expect(this.post, 'post has the right user id').property('userId').to.equal(this.user.id);\n});",
              "err": {},
              "uuid": "3a063eaf-1f21-4e50-9d7f-784a4ddbdc77",
              "parentUUID": "5e9d4cde-6cbb-4668-9d6e-fdc990759517",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.intercept() - route responses to matching requests",
              "fullTitle": "Network Requests cy.intercept() - route responses to matching requests",
              "timedOut": null,
              "duration": 1918,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/intercept\nvar message = 'whoa, this comment does not exist'; // Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // https://on.cypress.io/wait\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]); // Listen to POST to comments\ncy.intercept('POST', '**/comments').as('postComment'); // we have code that posts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-post').click();\ncy.wait('@postComment').should(function (_ref) {\n  var request = _ref.request,\n      response = _ref.response;\n  expect(request.body).to.include('email');\n  expect(request.headers).to.have.property('content-type');\n  expect(response && response.body).to.have.property('name', 'Using POST in cy.intercept()');\n}); // Stub a response to PUT comments/ ****\ncy.intercept({\n  method: 'PUT',\n  url: '**/comments/*'\n}, {\n  statusCode: 404,\n  body: {\n    error: message\n  },\n  headers: {\n    'access-control-allow-origin': '*'\n  },\n  delayMs: 500\n}).as('putComment'); // we have code that puts a comment when\n// the button is clicked in scripts.js\ncy.get('.network-put').click();\ncy.wait('@putComment'); // our 404 statusCode logic in scripts.js executed\ncy.get('.network-put-comment').should('contain', message);",
              "err": {},
              "uuid": "cf52c8ca-c0e4-4a47-b235-458b620876ff",
              "parentUUID": "5e9d4cde-6cbb-4668-9d6e-fdc990759517",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d9e0c7a-8c50-4150-85d3-56b6750681c6",
            "4c2f556e-6ce3-43f0-8fd9-d5731a4dae91",
            "da94d613-1342-420d-a892-e59a2a0c81f6",
            "aa502295-3896-43ac-9ff8-b9ef6add6422",
            "3a063eaf-1f21-4e50-9d7f-784a4ddbdc77",
            "cf52c8ca-c0e4-4a47-b235-458b620876ff"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6292,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "d8a252fe-717b-45ce-bcbb-52be7c696ef6",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\querying.spec.js",
      "file": "cypress\\integration\\examples\\querying.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a775a5c6-fd62-4ac8-9848-331f5ed57248",
          "title": "Querying",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.get() - query DOM elements",
              "fullTitle": "Querying cy.get() - query DOM elements",
              "timedOut": null,
              "duration": 1115,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/get\ncy.get('#query-btn').should('contain', 'Button');\ncy.get('.query-btn').should('contain', 'Button');\ncy.get('#querying .well>button:first').should('contain', 'Button'); //              â†²\n// Use CSS selectors just like jQuery\ncy.get('[data-test-id=\"test-example\"]').should('have.class', 'example'); // 'cy.get()' yields jQuery object, you can get its attribute\n// by invoking `.attr()` method\ncy.get('[data-test-id=\"test-example\"]').invoke('attr', 'data-test-id').should('equal', 'test-example'); // or you can get element's CSS property\ncy.get('[data-test-id=\"test-example\"]').invoke('css', 'position').should('equal', 'static'); // or use assertions directly during 'cy.get()'\n// https://on.cypress.io/assertions\ncy.get('[data-test-id=\"test-example\"]').should('have.attr', 'data-test-id', 'test-example').and('have.css', 'position', 'static');",
              "err": {},
              "uuid": "3d6a3c09-09b8-4552-b45e-dfe3f3a03ba1",
              "parentUUID": "a775a5c6-fd62-4ac8-9848-331f5ed57248",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.contains() - query DOM elements with matching content",
              "fullTitle": "Querying cy.contains() - query DOM elements with matching content",
              "timedOut": null,
              "duration": 250,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/contains\ncy.get('.query-list').contains('bananas').should('have.class', 'third'); // we can pass a regexp to `.contains()`\ncy.get('.query-list').contains(/^b\\w+/).should('have.class', 'third');\ncy.get('.query-list').contains('apples').should('have.class', 'first'); // passing a selector to contains will\n// yield the selector containing the text\ncy.get('#querying').contains('ul', 'oranges').should('have.class', 'query-list');\ncy.get('.query-button').contains('Save Form').should('have.class', 'btn');",
              "err": {},
              "uuid": "4c7466f7-225f-4761-aa67-b4c3ccaffd82",
              "parentUUID": "a775a5c6-fd62-4ac8-9848-331f5ed57248",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".within() - query DOM elements within a specific element",
              "fullTitle": "Querying .within() - query DOM elements within a specific element",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/within\ncy.get('.query-form').within(function () {\n  cy.get('input:first').should('have.attr', 'placeholder', 'Email');\n  cy.get('input:last').should('have.attr', 'placeholder', 'Password');\n});",
              "err": {},
              "uuid": "98ed95e0-a130-4c20-b488-b44fc589616e",
              "parentUUID": "a775a5c6-fd62-4ac8-9848-331f5ed57248",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.root() - query the root DOM element",
              "fullTitle": "Querying cy.root() - query the root DOM element",
              "timedOut": null,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/root\n// By default, root is the document\ncy.root().should('match', 'html');\ncy.get('.query-ul').within(function () {\n  // In this within, the root is now the ul DOM element\n  cy.root().should('have.class', 'query-ul');\n});",
              "err": {},
              "uuid": "b06b449f-4776-4501-ba23-7e2338e4fce3",
              "parentUUID": "a775a5c6-fd62-4ac8-9848-331f5ed57248",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "best practices - selecting elements",
              "fullTitle": "Querying best practices - selecting elements",
              "timedOut": null,
              "duration": 721,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/best-practices#Selecting-Elements\ncy.get('[data-cy=best-practices-selecting-elements]').within(function () {\n  // Worst - too generic, no context\n  cy.get('button').click(); // Bad. Coupled to styling. Highly subject to change.\n  cy.get('.btn.btn-large').click(); // Average. Coupled to the `name` attribute which has HTML semantics.\n  cy.get('[name=submission]').click(); // Better. But still coupled to styling or JS event listeners.\n  cy.get('#main').click(); // Slightly better. Uses an ID but also ensures the element\n  // has an ARIA role attribute\n  cy.get('#main[role=button]').click(); // Much better. But still coupled to text content that may change.\n  cy.contains('Submit').click(); // Best. Insulated from all changes.\n  cy.get('[data-cy=submit]').click();\n});",
              "err": {},
              "uuid": "78d7923b-ead2-4e96-80f0-215974a7d95c",
              "parentUUID": "a775a5c6-fd62-4ac8-9848-331f5ed57248",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3d6a3c09-09b8-4552-b45e-dfe3f3a03ba1",
            "4c7466f7-225f-4761-aa67-b4c3ccaffd82",
            "98ed95e0-a130-4c20-b488-b44fc589616e",
            "b06b449f-4776-4501-ba23-7e2338e4fce3",
            "78d7923b-ead2-4e96-80f0-215974a7d95c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2404,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "48a559c2-0738-494c-81ba-0b69b31d7572",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\spies_stubs_clocks.spec.js",
      "file": "cypress\\integration\\examples\\spies_stubs_clocks.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "0399ef29-903d-47cb-8123-4b00f3278bd7",
          "title": "Spies, Stubs, and Clock",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.spy() - wrap a method in a spy",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() - wrap a method in a spy",
              "timedOut": null,
              "duration": 623,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/spy\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  foo: function foo() {}\n};\nvar spy = cy.spy(obj, 'foo').as('anyArgs');\nobj.foo();\nexpect(spy).to.be.called;",
              "err": {},
              "uuid": "2abb294e-7947-4136-9a86-20f1db7ad636",
              "parentUUID": "0399ef29-903d-47cb-8123-4b00f3278bd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.spy() retries until assertions pass",
              "fullTitle": "Spies, Stubs, and Clock cy.spy() retries until assertions pass",
              "timedOut": null,
              "duration": 2538,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  /**\n   * Prints the argument passed\n   * @param x {any}\n  */\n  foo: function foo(x) {\n    console.log('obj.foo called with', x);\n  }\n};\ncy.spy(obj, 'foo').as('foo');\nsetTimeout(function () {\n  obj.foo('first');\n}, 500);\nsetTimeout(function () {\n  obj.foo('second');\n}, 2500);\ncy.get('@foo').should('have.been.calledTwice');",
              "err": {},
              "uuid": "ac6953a6-dcb1-49e7-a233-6bbec373c0d9",
              "parentUUID": "0399ef29-903d-47cb-8123-4b00f3278bd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() - create a stub and/or replace a function with stub",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() - create a stub and/or replace a function with stub",
              "timedOut": null,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/stub\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\nvar obj = {\n  /**\n   * prints both arguments to the console\n   * @param a {string}\n   * @param b {string}\n  */\n  foo: function foo(a, b) {\n    console.log('a', a, 'b', b);\n  }\n};\nvar stub = cy.stub(obj, 'foo').as('foo');\nobj.foo('foo', 'bar');\nexpect(stub).to.be.called;",
              "err": {},
              "uuid": "a958f307-89e7-4a59-a32a-ad162eb4c428",
              "parentUUID": "0399ef29-903d-47cb-8123-4b00f3278bd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.clock() - control time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.clock() - control time in the browser",
              "timedOut": null,
              "duration": 262,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clock\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#clock-div').click().should('have.text', '1489449600');",
              "err": {},
              "uuid": "a776b486-4d5c-4805-a081-16184840fde8",
              "parentUUID": "0399ef29-903d-47cb-8123-4b00f3278bd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.tick() - move time in the browser",
              "fullTitle": "Spies, Stubs, and Clock cy.tick() - move time in the browser",
              "timedOut": null,
              "duration": 410,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/tick\n// create the date in UTC so its always the same\n// no matter what local timezone the browser is running in\nvar now = new Date(Date.UTC(2017, 2, 14)).getTime();\ncy.clock(now);\ncy.visit('https://example.cypress.io/commands/spies-stubs-clocks');\ncy.get('#tick-div').click().should('have.text', '1489449600');\ncy.tick(10000); // 10 seconds passed\ncy.get('#tick-div').click().should('have.text', '1489449610');",
              "err": {},
              "uuid": "3a5287a5-b0a5-41a6-ac26-7ca9c3aeaee7",
              "parentUUID": "0399ef29-903d-47cb-8123-4b00f3278bd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.stub() matches depending on arguments",
              "fullTitle": "Spies, Stubs, and Clock cy.stub() matches depending on arguments",
              "timedOut": null,
              "duration": 42,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar greeter = {\n  /**\n   * Greets a person\n   * @param {string} name\n  */\n  greet: function greet(name) {\n    return \"Hello, \".concat(name, \"!\");\n  }\n};\ncy.stub(greeter, 'greet').callThrough() // if you want non-matched calls to call the real method\n.withArgs(Cypress.sinon.match.string).returns('Hi').withArgs(Cypress.sinon.match.number)[\"throws\"](new Error('Invalid name'));\nexpect(greeter.greet('World')).to.equal('Hi'); // @ts-ignore\nexpect(function () {\n  return greeter.greet(42);\n}).to[\"throw\"]('Invalid name');\nexpect(greeter.greet).to.have.been.calledTwice; // non-matched calls goes the actual method\n// @ts-ignore\nexpect(greeter.greet()).to.equal('Hello, undefined!');",
              "err": {},
              "uuid": "2689df44-b51c-4efe-8c98-9abeaaf22db1",
              "parentUUID": "0399ef29-903d-47cb-8123-4b00f3278bd7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "matches call arguments using Sinon matchers",
              "fullTitle": "Spies, Stubs, and Clock matches call arguments using Sinon matchers",
              "timedOut": null,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// see all possible matchers at\n// https://sinonjs.org/releases/latest/matchers/\nvar calculator = {\n  /**\n   * returns the sum of two arguments\n   * @param a {number}\n   * @param b {number}\n  */\n  add: function add(a, b) {\n    return a + b;\n  }\n};\nvar spy = cy.spy(calculator, 'add').as('add');\nexpect(calculator.add(2, 3)).to.equal(5); // if we want to assert the exact values used during the call\nexpect(spy).to.be.calledWith(2, 3); // let's confirm \"add\" method was called with two numbers\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match.number); // alternatively, provide the value to match\nexpect(spy).to.be.calledWith(Cypress.sinon.match(2), Cypress.sinon.match(3)); // match any value\nexpect(spy).to.be.calledWith(Cypress.sinon.match.any, 3); // match any value from a list\nexpect(spy).to.be.calledWith(Cypress.sinon.match[\"in\"]([1, 2, 3]), 3);\n/**\n * Returns true if the given number is event\n * @param {number} x\n */\nvar isEven = function isEven(x) {\n  return x % 2 === 0;\n}; // expect the value to pass a custom predicate function\n// the second argument to \"sinon.match(predicate, message)\" is\n// shown if the predicate does not pass and assertion fails\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match(isEven, 'isEven'), 3);\n/**\n * Returns a function that checks if a given number is larger than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\nvar isGreaterThan = function isGreaterThan(limit) {\n  return function (x) {\n    return x > limit;\n  };\n};\n/**\n * Returns a function that checks if a given number is less than the limit\n * @param {number} limit\n * @returns {(x: number) => boolean}\n */\n\nvar isLessThan = function isLessThan(limit) {\n  return function (x) {\n    return x < limit;\n  };\n}; // you can combine several matchers using \"and\", \"or\"\n\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(2), '> 2').and(Cypress.sinon.match(isLessThan(4), '< 4')));\nexpect(spy).to.be.calledWith(Cypress.sinon.match.number, Cypress.sinon.match(isGreaterThan(200), '> 200').or(Cypress.sinon.match(3))); // matchers can be used from BDD assertions\ncy.get('@add').should('have.been.calledWith', Cypress.sinon.match.number, Cypress.sinon.match(3)); // you can alias matchers for shorter test code\nvar M = Cypress.sinon.match;\ncy.get('@add').should('have.been.calledWith', M.number, M(3));",
              "err": {},
              "uuid": "82f521a9-0022-46c0-9009-71d6b003720e",
              "parentUUID": "0399ef29-903d-47cb-8123-4b00f3278bd7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2abb294e-7947-4136-9a86-20f1db7ad636",
            "ac6953a6-dcb1-49e7-a233-6bbec373c0d9",
            "a958f307-89e7-4a59-a32a-ad162eb4c428",
            "a776b486-4d5c-4805-a081-16184840fde8",
            "3a5287a5-b0a5-41a6-ac26-7ca9c3aeaee7",
            "2689df44-b51c-4efe-8c98-9abeaaf22db1",
            "82f521a9-0022-46c0-9009-71d6b003720e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4132,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "c98b4f37-7b80-44a1-9540-a00c8beadf4a",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\traversal.spec.js",
      "file": "cypress\\integration\\examples\\traversal.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6dae97bc-715a-4465-b267-cb2b2deb313f",
          "title": "Traversal",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".children() - get child DOM elements",
              "fullTitle": "Traversal .children() - get child DOM elements",
              "timedOut": null,
              "duration": 640,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/children\ncy.get('.traversal-breadcrumb').children('.active').should('contain', 'Data');",
              "err": {},
              "uuid": "a67dbd60-3ff6-4473-b5b2-4c5b56946340",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".closest() - get closest ancestor DOM element",
              "fullTitle": "Traversal .closest() - get closest ancestor DOM element",
              "timedOut": null,
              "duration": 357,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/closest\ncy.get('.traversal-badge').closest('ul').should('have.class', 'list-group');",
              "err": {},
              "uuid": "07d76785-c696-4933-9800-3309b680fb4a",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".eq() - get a DOM element at a specific index",
              "fullTitle": "Traversal .eq() - get a DOM element at a specific index",
              "timedOut": null,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/eq\ncy.get('.traversal-list>li').eq(1).should('contain', 'siamese');",
              "err": {},
              "uuid": "42884079-a0d2-41b4-bf5f-db4bafe4661c",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".filter() - get DOM elements that match the selector",
              "fullTitle": "Traversal .filter() - get DOM elements that match the selector",
              "timedOut": null,
              "duration": 164,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/filter\ncy.get('.traversal-nav>li').filter('.active').should('contain', 'About');",
              "err": {},
              "uuid": "ccd6e15c-c5e7-4687-ac64-ad93fa5ddcb2",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".find() - get descendant DOM elements of the selector",
              "fullTitle": "Traversal .find() - get descendant DOM elements of the selector",
              "timedOut": null,
              "duration": 168,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/find\ncy.get('.traversal-pagination').find('li').find('a').should('have.length', 7);",
              "err": {},
              "uuid": "2f061542-4da7-4a00-ad00-1b73187d3828",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".first() - get first DOM element",
              "fullTitle": "Traversal .first() - get first DOM element",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/first\ncy.get('.traversal-table td').first().should('contain', '1');",
              "err": {},
              "uuid": "f86aa0fc-eded-4209-b8a0-a3c1ea729a65",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".last() - get last DOM element",
              "fullTitle": "Traversal .last() - get last DOM element",
              "timedOut": null,
              "duration": 255,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/last\ncy.get('.traversal-buttons .btn').last().should('contain', 'Submit');",
              "err": {},
              "uuid": "bea619b2-8d26-4961-ad87-aa279e0b2d7f",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".next() - get next sibling DOM element",
              "fullTitle": "Traversal .next() - get next sibling DOM element",
              "timedOut": null,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/next\ncy.get('.traversal-ul').contains('apples').next().should('contain', 'oranges');",
              "err": {},
              "uuid": "924dabfb-3e4b-4bf6-806a-1393fb7c5f14",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextAll() - get all next sibling DOM elements",
              "fullTitle": "Traversal .nextAll() - get all next sibling DOM elements",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextall\ncy.get('.traversal-next-all').contains('oranges').nextAll().should('have.length', 3);",
              "err": {},
              "uuid": "01199a03-7d29-4657-b62a-ea9b9e58f239",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".nextUntil() - get next sibling DOM elements until next el",
              "fullTitle": "Traversal .nextUntil() - get next sibling DOM elements until next el",
              "timedOut": null,
              "duration": 146,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/nextuntil\ncy.get('#veggies').nextUntil('#nuts').should('have.length', 3);",
              "err": {},
              "uuid": "a416b271-3f20-4f6c-8181-cfc2169f7f1f",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".not() - remove DOM elements from set of DOM elements",
              "fullTitle": "Traversal .not() - remove DOM elements from set of DOM elements",
              "timedOut": null,
              "duration": 156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/not\ncy.get('.traversal-disabled .btn').not('[disabled]').should('not.contain', 'Disabled');",
              "err": {},
              "uuid": "b2a4d229-d617-4cd0-b6e1-1d20eae668df",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parent() - get parent DOM element from DOM elements",
              "fullTitle": "Traversal .parent() - get parent DOM element from DOM elements",
              "timedOut": null,
              "duration": 320,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parent\ncy.get('.traversal-mark').parent().should('contain', 'Morbi leo risus');",
              "err": {},
              "uuid": "d8f51a81-5dcd-4b53-a5b3-524e16222822",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parents() - get parent DOM elements from DOM elements",
              "fullTitle": "Traversal .parents() - get parent DOM elements from DOM elements",
              "timedOut": null,
              "duration": 196,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parents\ncy.get('.traversal-cite').parents().should('match', 'blockquote');",
              "err": {},
              "uuid": "2bd07264-e316-47d9-80a2-044e16cfb131",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".parentsUntil() - get parent DOM elements from DOM elements until el",
              "fullTitle": "Traversal .parentsUntil() - get parent DOM elements from DOM elements until el",
              "timedOut": null,
              "duration": 140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/parentsuntil\ncy.get('.clothes-nav').find('.active').parentsUntil('.clothes-nav').should('have.length', 2);",
              "err": {},
              "uuid": "9c18b492-284d-4d5b-8dfd-cf553a6d390d",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prev() - get previous sibling DOM element",
              "fullTitle": "Traversal .prev() - get previous sibling DOM element",
              "timedOut": null,
              "duration": 131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prev\ncy.get('.birds').find('.active').prev().should('contain', 'Lorikeets');",
              "err": {},
              "uuid": "2d64cc82-30cb-4e43-8896-275ff1c761d9",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevAll() - get all previous sibling DOM elements",
              "fullTitle": "Traversal .prevAll() - get all previous sibling DOM elements",
              "timedOut": null,
              "duration": 159,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevall\ncy.get('.fruits-list').find('.third').prevAll().should('have.length', 2);",
              "err": {},
              "uuid": "65d9dd9a-54db-420b-a466-788cdddd1f7b",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".prevUntil() - get all previous sibling DOM elements until el",
              "fullTitle": "Traversal .prevUntil() - get all previous sibling DOM elements until el",
              "timedOut": null,
              "duration": 179,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/prevuntil\ncy.get('.foods-list').find('#nuts').prevUntil('#veggies').should('have.length', 3);",
              "err": {},
              "uuid": "2561a471-6a1e-4adb-922c-26156b6433b4",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".siblings() - get all sibling DOM elements",
              "fullTitle": "Traversal .siblings() - get all sibling DOM elements",
              "timedOut": null,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/siblings\ncy.get('.traversal-pills .active').siblings().should('have.length', 2);",
              "err": {},
              "uuid": "6aaa34b4-0f70-4361-ab16-552a2de53fca",
              "parentUUID": "6dae97bc-715a-4465-b267-cb2b2deb313f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a67dbd60-3ff6-4473-b5b2-4c5b56946340",
            "07d76785-c696-4933-9800-3309b680fb4a",
            "42884079-a0d2-41b4-bf5f-db4bafe4661c",
            "ccd6e15c-c5e7-4687-ac64-ad93fa5ddcb2",
            "2f061542-4da7-4a00-ad00-1b73187d3828",
            "f86aa0fc-eded-4209-b8a0-a3c1ea729a65",
            "bea619b2-8d26-4961-ad87-aa279e0b2d7f",
            "924dabfb-3e4b-4bf6-806a-1393fb7c5f14",
            "01199a03-7d29-4657-b62a-ea9b9e58f239",
            "a416b271-3f20-4f6c-8181-cfc2169f7f1f",
            "b2a4d229-d617-4cd0-b6e1-1d20eae668df",
            "d8f51a81-5dcd-4b53-a5b3-524e16222822",
            "2bd07264-e316-47d9-80a2-044e16cfb131",
            "9c18b492-284d-4d5b-8dfd-cf553a6d390d",
            "2d64cc82-30cb-4e43-8896-275ff1c761d9",
            "65d9dd9a-54db-420b-a466-788cdddd1f7b",
            "2561a471-6a1e-4adb-922c-26156b6433b4",
            "6aaa34b4-0f70-4361-ab16-552a2de53fca"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4007,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "02c126e5-483d-4200-ba3c-3d25aae61a33",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\utilities.spec.js",
      "file": "cypress\\integration\\examples\\utilities.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "107661e1-1069-48ce-8547-28e5dbec83fe",
          "title": "Utilities",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Cypress._ - call a lodash method",
              "fullTitle": "Utilities Cypress._ - call a lodash method",
              "timedOut": null,
              "duration": 760,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/_\ncy.request('https://jsonplaceholder.cypress.io/users').then(function (response) {\n  var ids = Cypress._.chain(response.body).map('id').take(3).value();\n  expect(ids).to.deep.eq([1, 2, 3]);\n});",
              "err": {},
              "uuid": "58c84b26-0f14-411e-ab23-fc554e8a46db",
              "parentUUID": "107661e1-1069-48ce-8547-28e5dbec83fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.$ - call a jQuery method",
              "fullTitle": "Utilities Cypress.$ - call a jQuery method",
              "timedOut": null,
              "duration": 279,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/$\nvar $li = Cypress.$('.utility-jquery li:first');\ncy.wrap($li).should('not.have.class', 'active').click().should('have.class', 'active');",
              "err": {},
              "uuid": "ee5b4dc9-2226-4fad-a87c-8cbd732bb299",
              "parentUUID": "107661e1-1069-48ce-8547-28e5dbec83fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Blob - blob utilities and base64 string conversion",
              "fullTitle": "Utilities Cypress.Blob - blob utilities and base64 string conversion",
              "timedOut": null,
              "duration": 416,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blob\ncy.get('.utility-blob').then(function ($div) {\n  // https://github.com/nolanlawson/blob-util#imgSrcToDataURL\n  // get the dataUrl string for the javascript-logo\n  return Cypress.Blob.imgSrcToDataURL('https://example.cypress.io/assets/img/javascript-logo.png', undefined, 'anonymous').then(function (dataUrl) {\n    // create an <img> element and set its src to the dataUrl\n    var img = Cypress.$('<img />', {\n      src: dataUrl\n    }); // need to explicitly return cy here since we are initially returning\n    // the Cypress.Blob.imgSrcToDataURL promise to our test\n    // append the image\n    $div.append(img);\n    cy.get('.utility-blob img').click().should('have.attr', 'src', dataUrl);\n  });\n});",
              "err": {},
              "uuid": "9236ad33-b622-4af5-bc28-977c29cfb23f",
              "parentUUID": "107661e1-1069-48ce-8547-28e5dbec83fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.minimatch - test out glob patterns against strings",
              "fullTitle": "Utilities Cypress.minimatch - test out glob patterns against strings",
              "timedOut": null,
              "duration": 121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/minimatch\nvar matching = Cypress.minimatch('/users/1/comments', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'matching wildcard').to.be[\"true\"];\nmatching = Cypress.minimatch('/users/1/comments/2', '/users/*/comments', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be[\"false\"]; // ** matches against all downstream path segments\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/**', {\n  matchBase: true\n});\nexpect(matching, 'comments').to.be[\"true\"]; // whereas * matches only the next path segment\nmatching = Cypress.minimatch('/foo/bar/baz/123/quux?a=b&c=2', '/foo/*', {\n  matchBase: false\n});\nexpect(matching, 'comments').to.be[\"false\"];",
              "err": {},
              "uuid": "1deaee12-bd9f-48fc-ad4e-e2510138ccae",
              "parentUUID": "107661e1-1069-48ce-8547-28e5dbec83fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cypress.Promise - instantiate a bluebird promise",
              "fullTitle": "Utilities Cypress.Promise - instantiate a bluebird promise",
              "timedOut": null,
              "duration": 1106,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/promise\nvar waited = false;\n/**\n * @return Bluebird<string>\n */\nfunction waitOneSecond() {\n  // return a promise that resolves after 1 second\n  // @ts-ignore TS2351 (new Cypress.Promise)\n  return new Cypress.Promise(function (resolve, reject) {\n    setTimeout(function () {\n      // set waited to true\n      waited = true; // resolve with 'foo' string\n      resolve('foo');\n    }, 1000);\n  });\n}\ncy.then(function () {\n  // return a promise to cy.then() that\n  // is awaited until it resolves\n  // @ts-ignore TS7006\n  return waitOneSecond().then(function (str) {\n    expect(str).to.eq('foo');\n    expect(waited).to.be[\"true\"];\n  });\n});",
              "err": {},
              "uuid": "4725c4fe-2fe7-402e-a8e1-3369788468ba",
              "parentUUID": "107661e1-1069-48ce-8547-28e5dbec83fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "58c84b26-0f14-411e-ab23-fc554e8a46db",
            "ee5b4dc9-2226-4fad-a87c-8cbd732bb299",
            "9236ad33-b622-4af5-bc28-977c29cfb23f",
            "1deaee12-bd9f-48fc-ad4e-e2510138ccae",
            "4725c4fe-2fe7-402e-a8e1-3369788468ba"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2682,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "35be14e7-e28b-44ad-b7fd-eea92fc7beab",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\viewport.spec.js",
      "file": "cypress\\integration\\examples\\viewport.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "7102f211-6343-4a15-b8fb-58f52a4f3f15",
          "title": "Viewport",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.viewport() - set the viewport size and dimension",
              "fullTitle": "Viewport cy.viewport() - set the viewport size and dimension",
              "timedOut": null,
              "duration": 3373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/viewport\ncy.get('#navbar').should('be.visible');\ncy.viewport(320, 480); // the navbar should have collapse since our screen is smaller\ncy.get('#navbar').should('not.be.visible');\ncy.get('.navbar-toggle').should('be.visible').click();\ncy.get('.nav').find('a').should('be.visible'); // lets see what our app looks like on a super large screen\ncy.viewport(2999, 2999); // cy.viewport() accepts a set of preset sizes\n// to easily set the screen to a device's width and height\n// We added a cy.wait() between each viewport change so you can see\n// the change otherwise it is a little too fast to see :)\ncy.viewport('macbook-15');\ncy.wait(200);\ncy.viewport('macbook-13');\ncy.wait(200);\ncy.viewport('macbook-11');\ncy.wait(200);\ncy.viewport('ipad-2');\ncy.wait(200);\ncy.viewport('ipad-mini');\ncy.wait(200);\ncy.viewport('iphone-6+');\ncy.wait(200);\ncy.viewport('iphone-6');\ncy.wait(200);\ncy.viewport('iphone-5');\ncy.wait(200);\ncy.viewport('iphone-4');\ncy.wait(200);\ncy.viewport('iphone-3');\ncy.wait(200); // cy.viewport() accepts an orientation for all presets\n// the default orientation is 'portrait'\ncy.viewport('ipad-2', 'portrait');\ncy.wait(200);\ncy.viewport('iphone-4', 'landscape');\ncy.wait(200); // The viewport will be reset back to the default dimensions\n// in between tests (the  default can be set in cypress.json)",
              "err": {},
              "uuid": "2a59c0f2-ed75-4d77-a4f2-9352605dbf51",
              "parentUUID": "7102f211-6343-4a15-b8fb-58f52a4f3f15",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a59c0f2-ed75-4d77-a4f2-9352605dbf51"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3373,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "71af7adf-3e31-427d-9f84-0bdadb785c03",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\waiting.spec.js",
      "file": "cypress\\integration\\examples\\waiting.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d650613f-4790-41b0-a81b-683d77ae71f2",
          "title": "Waiting",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.wait() - wait for a specific amount of time",
              "fullTitle": "Waiting cy.wait() - wait for a specific amount of time",
              "timedOut": null,
              "duration": 5096,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.wait-input1').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input2').type('Wait 1000ms after typing');\ncy.wait(1000);\ncy.get('.wait-input3').type('Wait 1000ms after typing');\ncy.wait(1000);",
              "err": {},
              "uuid": "43809c7b-65a5-494d-9bf4-a0034e0f96d8",
              "parentUUID": "d650613f-4790-41b0-a81b-683d77ae71f2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.wait() - wait for a specific route",
              "fullTitle": "Waiting cy.wait() - wait for a specific route",
              "timedOut": null,
              "duration": 3529,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Listen to GET to comments/1\ncy.intercept('GET', '**/comments/*').as('getComment'); // we have code that gets a comment when\n// the button is clicked in scripts.js\ncy.get('.network-btn').click(); // wait for GET comments/1\ncy.wait('@getComment').its('response.statusCode').should('be.oneOf', [200, 304]);",
              "err": {},
              "uuid": "134a5bbf-43db-4327-927d-842d0c0e1181",
              "parentUUID": "d650613f-4790-41b0-a81b-683d77ae71f2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "43809c7b-65a5-494d-9bf4-a0034e0f96d8",
            "134a5bbf-43db-4327-927d-842d0c0e1181"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8625,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "e1e81363-0376-4b34-9607-fad0e985cb45",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\window.spec.js",
      "file": "cypress\\integration\\examples\\window.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "38d86632-3a28-4baf-9a28-a2f0dde5ea4e",
          "title": "Window",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "cy.window() - get the global window object",
              "fullTitle": "Window cy.window() - get the global window object",
              "timedOut": null,
              "duration": 643,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/window\ncy.window().should('have.property', 'top');",
              "err": {},
              "uuid": "ba197f17-bc10-482f-8660-6d89496c0b40",
              "parentUUID": "38d86632-3a28-4baf-9a28-a2f0dde5ea4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.document() - get the document object",
              "fullTitle": "Window cy.document() - get the document object",
              "timedOut": null,
              "duration": 142,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/document\ncy.document().should('have.property', 'charset').and('eq', 'UTF-8');",
              "err": {},
              "uuid": "145e28e7-b4b3-4583-8b2a-cef38a33c718",
              "parentUUID": "38d86632-3a28-4baf-9a28-a2f0dde5ea4e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.title() - get the title",
              "fullTitle": "Window cy.title() - get the title",
              "timedOut": null,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/title\ncy.title().should('include', 'Kitchen Sink');",
              "err": {},
              "uuid": "0ab1b645-8acf-48c7-bdf6-1255d071ee82",
              "parentUUID": "38d86632-3a28-4baf-9a28-a2f0dde5ea4e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ba197f17-bc10-482f-8660-6d89496c0b40",
            "145e28e7-b4b3-4583-8b2a-cef38a33c718",
            "0ab1b645-8acf-48c7-bdf6-1255d071ee82"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 954,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "da73889f-bb69-428d-953f-00bc6e2e8564",
      "title": "",
      "fullFile": "cypress\\integration\\examples\\actions.spec.js",
      "file": "cypress\\integration\\examples\\actions.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
          "title": "Actions",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": ".type() - type into a DOM element",
              "fullTitle": "Actions .type() - type into a DOM element",
              "timedOut": null,
              "duration": 5226,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/type\ncy.get('.action-email').type('fake@email.com').should('have.value', 'fake@email.com') // .type() with special character sequences\n.type('{leftarrow}{rightarrow}{uparrow}{downarrow}').type('{del}{selectall}{backspace}') // .type() with key modifiers\n.type('{alt}{option}') //these are equivalent\n.type('{ctrl}{control}') //these are equivalent\n.type('{meta}{command}{cmd}') //these are equivalent\n.type('{shift}') // Delay each keypress by 0.1 sec\n.type('slow.typing@email.com', {\n  delay: 100\n}).should('have.value', 'slow.typing@email.com');\ncy.get('.action-disabled') // Ignore error checking prior to type\n// like whether the input is visible or disabled\n.type('disabled error checking', {\n  force: true\n}).should('have.value', 'disabled error checking');",
              "err": {},
              "uuid": "763402d4-c6b1-4c8b-b15c-7c1997c9aed9",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".focus() - focus on a DOM element",
              "fullTitle": "Actions .focus() - focus on a DOM element",
              "timedOut": null,
              "duration": 379,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/focus\ncy.get('.action-focus').focus().should('have.class', 'focus').prev().should('have.attr', 'style', 'color: orange;');",
              "err": {},
              "uuid": "e501c149-5ddd-47d1-8a73-c9801e32e1dc",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".blur() - blur off a DOM element",
              "fullTitle": "Actions .blur() - blur off a DOM element",
              "timedOut": null,
              "duration": 594,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/blur\ncy.get('.action-blur').type('About to blur').blur().should('have.class', 'error').prev().should('have.attr', 'style', 'color: red;');",
              "err": {},
              "uuid": "6d046f04-0e11-4298-9945-4d504ef5974b",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".clear() - clears an input or textarea element",
              "fullTitle": "Actions .clear() - clears an input or textarea element",
              "timedOut": null,
              "duration": 633,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/clear\ncy.get('.action-clear').type('Clear this text').should('have.value', 'Clear this text').clear().should('have.value', '');",
              "err": {},
              "uuid": "2c85e55f-7bf0-4795-994b-852b8705c313",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".submit() - submit a form",
              "fullTitle": "Actions .submit() - submit a form",
              "timedOut": null,
              "duration": 466,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/submit\ncy.get('.action-form').find('[type=\"text\"]').type('HALFOFF');\ncy.get('.action-form').submit().next().should('contain', 'Your form has been submitted!');",
              "err": {},
              "uuid": "4b3cd1c7-b9d4-4234-8267-56f45d7e8ed4",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".click() - click on a DOM element",
              "fullTitle": "Actions .click() - click on a DOM element",
              "timedOut": null,
              "duration": 2300,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/click\ncy.get('.action-btn').click(); // You can click on 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// clicking in the center of the element is the default\ncy.get('#action-canvas').click();\ncy.get('#action-canvas').click('topLeft');\ncy.get('#action-canvas').click('top');\ncy.get('#action-canvas').click('topRight');\ncy.get('#action-canvas').click('left');\ncy.get('#action-canvas').click('right');\ncy.get('#action-canvas').click('bottomLeft');\ncy.get('#action-canvas').click('bottom');\ncy.get('#action-canvas').click('bottomRight'); // .click() accepts an x and y coordinate\n// that controls where the click occurs :)\ncy.get('#action-canvas').click(80, 75) // click 80px on x coord and 75px on y coord\n.click(170, 75).click(80, 165).click(100, 185).click(125, 190).click(150, 185).click(170, 165); // click multiple elements by passing multiple: true\ncy.get('.action-labels>.label').click({\n  multiple: true\n}); // Ignore error checking prior to clicking\ncy.get('.action-opacity>.btn').click({\n  force: true\n});",
              "err": {},
              "uuid": "b6f1a66f-8823-4e47-929d-0067d461ffe8",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".dblclick() - double click on a DOM element",
              "fullTitle": "Actions .dblclick() - double click on a DOM element",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/dblclick\n// Our app has a listener on 'dblclick' event in our 'scripts.js'\n// that hides the div and shows an input on double click\ncy.get('.action-div').dblclick().should('not.be.visible');\ncy.get('.action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "2b44b8ac-8cf9-4973-b87f-c3951c7458e5",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".rightclick() - right click on a DOM element",
              "fullTitle": "Actions .rightclick() - right click on a DOM element",
              "timedOut": null,
              "duration": 241,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/rightclick\n// Our app has a listener on 'contextmenu' event in our 'scripts.js'\n// that hides the div and shows an input on right click\ncy.get('.rightclick-action-div').rightclick().should('not.be.visible');\ncy.get('.rightclick-action-input-hidden').should('be.visible');",
              "err": {},
              "uuid": "138ac8d8-cd41-4e46-8227-55f467ea0af9",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".check() - check a checkbox or radio element",
              "fullTitle": "Actions .check() - check a checkbox or radio element",
              "timedOut": null,
              "duration": 1079,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/check\n// By default, .check() will check all\n// matching checkbox or radio elements in succession, one after another\ncy.get('.action-checkboxes [type=\"checkbox\"]').not('[disabled]').check().should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').not('[disabled]').check().should('be.checked'); // .check() accepts a value argument\ncy.get('.action-radios [type=\"radio\"]').check('radio1').should('be.checked'); // .check() accepts an array of values\ncy.get('.action-multiple-checkboxes [type=\"checkbox\"]').check(['checkbox1', 'checkbox2']).should('be.checked'); // Ignore error checking prior to checking\ncy.get('.action-checkboxes [disabled]').check({\n  force: true\n}).should('be.checked');\ncy.get('.action-radios [type=\"radio\"]').check('radio3', {\n  force: true\n}).should('be.checked');",
              "err": {},
              "uuid": "bafc269a-d288-4cd0-979b-25406ac7754f",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".uncheck() - uncheck a checkbox element",
              "fullTitle": "Actions .uncheck() - uncheck a checkbox element",
              "timedOut": null,
              "duration": 968,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/uncheck\n// By default, .uncheck() will uncheck all matching\n// checkbox elements in succession, one after another\ncy.get('.action-check [type=\"checkbox\"]').not('[disabled]').uncheck().should('not.be.checked'); // .uncheck() accepts a value argument\ncy.get('.action-check [type=\"checkbox\"]').check('checkbox1').uncheck('checkbox1').should('not.be.checked'); // .uncheck() accepts an array of values\ncy.get('.action-check [type=\"checkbox\"]').check(['checkbox1', 'checkbox3']).uncheck(['checkbox1', 'checkbox3']).should('not.be.checked'); // Ignore error checking prior to unchecking\ncy.get('.action-check [disabled]').uncheck({\n  force: true\n}).should('not.be.checked');",
              "err": {},
              "uuid": "62999fb5-c491-4961-981c-aa0a0bd14294",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".select() - select an option in a <select> element",
              "fullTitle": "Actions .select() - select an option in a <select> element",
              "timedOut": null,
              "duration": 1180,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/select\n// at first, no option should be selected\ncy.get('.action-select').should('have.value', '--Select a fruit--'); // Select option(s) with matching text content\ncy.get('.action-select').select('apples'); // confirm the apples were selected\n// note that each value starts with \"fr-\" in our HTML\ncy.get('.action-select').should('have.value', 'fr-apples');\ncy.get('.action-select-multiple').select(['apples', 'oranges', 'bananas']) // when getting multiple values, invoke \"val\" method first\n.invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // Select option(s) with matching value\ncy.get('.action-select').select('fr-bananas') // can attach an assertion right away to the element\n.should('have.value', 'fr-bananas');\ncy.get('.action-select-multiple').select(['fr-apples', 'fr-oranges', 'fr-bananas']).invoke('val').should('deep.equal', ['fr-apples', 'fr-oranges', 'fr-bananas']); // assert the selected values include oranges\ncy.get('.action-select-multiple').invoke('val').should('include', 'fr-oranges');",
              "err": {},
              "uuid": "b3e7b92e-f73f-4a62-98a0-e5776f602fe9",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".scrollIntoView() - scroll an element into view",
              "fullTitle": "Actions .scrollIntoView() - scroll an element into view",
              "timedOut": null,
              "duration": 259,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollintoview\n// normally all of these buttons are hidden,\n// because they're not within\n// the viewable area of their parent\n// (we need to scroll to see them)\ncy.get('#scroll-horizontal button').should('not.be.visible'); // scroll the button into view, as if the user had scrolled\ncy.get('#scroll-horizontal button').scrollIntoView().should('be.visible');\ncy.get('#scroll-vertical button').should('not.be.visible'); // Cypress handles the scroll direction needed\ncy.get('#scroll-vertical button').scrollIntoView().should('be.visible');\ncy.get('#scroll-both button').should('not.be.visible'); // Cypress knows to scroll to the right and down\ncy.get('#scroll-both button').scrollIntoView().should('be.visible');",
              "err": {},
              "uuid": "4e3213d9-0999-4831-92f7-471187158c6e",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": ".trigger() - trigger an event on a DOM element",
              "fullTitle": "Actions .trigger() - trigger an event on a DOM element",
              "timedOut": null,
              "duration": 201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/trigger\n// To interact with a range input (slider)\n// we need to set its value & trigger the\n// event to signal it changed\n// Here, we invoke jQuery's val() method to set\n// the value and trigger the 'change' event\ncy.get('.trigger-input-range').invoke('val', 25).trigger('change').get('input[type=range]').siblings('p').should('have.text', '25');",
              "err": {},
              "uuid": "4c8fc78e-b84e-439c-ac14-11312f61a221",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cy.scrollTo() - scroll the window or element to a position",
              "fullTitle": "Actions cy.scrollTo() - scroll the window or element to a position",
              "timedOut": null,
              "duration": 2157,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// https://on.cypress.io/scrollto\n// You can scroll to 9 specific positions of an element:\n//  -----------------------------------\n// | topLeft        top       topRight |\n// |                                   |\n// |                                   |\n// |                                   |\n// | left          center        right |\n// |                                   |\n// |                                   |\n// |                                   |\n// | bottomLeft   bottom   bottomRight |\n//  -----------------------------------\n// if you chain .scrollTo() off of cy, we will\n// scroll the entire window\ncy.scrollTo('bottom');\ncy.get('#scrollable-horizontal').scrollTo('right'); // or you can scroll to a specific coordinate:\n// (x axis, y axis) in pixels\ncy.get('#scrollable-vertical').scrollTo(250, 250); // or you can scroll to a specific percentage\n// of the (width, height) of the element\ncy.get('#scrollable-both').scrollTo('75%', '25%'); // control the easing of the scroll (default is 'swing')\ncy.get('#scrollable-vertical').scrollTo('center', {\n  easing: 'linear'\n}); // control the duration of the scroll (in ms)\ncy.get('#scrollable-both').scrollTo('center', {\n  duration: 2000\n});",
              "err": {},
              "uuid": "8f794356-aa03-470e-a512-852d64e5f21b",
              "parentUUID": "3c9b2ab9-c468-49b9-986f-7ff1be63f20e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "763402d4-c6b1-4c8b-b15c-7c1997c9aed9",
            "e501c149-5ddd-47d1-8a73-c9801e32e1dc",
            "6d046f04-0e11-4298-9945-4d504ef5974b",
            "2c85e55f-7bf0-4795-994b-852b8705c313",
            "4b3cd1c7-b9d4-4234-8267-56f45d7e8ed4",
            "b6f1a66f-8823-4e47-929d-0067d461ffe8",
            "2b44b8ac-8cf9-4973-b87f-c3951c7458e5",
            "138ac8d8-cd41-4e46-8227-55f467ea0af9",
            "bafc269a-d288-4cd0-979b-25406ac7754f",
            "62999fb5-c491-4961-981c-aa0a0bd14294",
            "b3e7b92e-f73f-4a62-98a0-e5776f602fe9",
            "4e3213d9-0999-4831-92f7-471187158c6e",
            "4c8fc78e-b84e-439c-ac14-11312f61a221",
            "8f794356-aa03-470e-a512-852d64e5f21b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 15954,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "5.2.0"
    }
  }
}